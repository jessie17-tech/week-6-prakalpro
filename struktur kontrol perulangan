#soal 1
def perkalian(x, y):
    # Jika salah satu bilangan adalah 0, hasilnya pasti 0
    if x == 0 or y == 0:
        return 0

    # Jika x negatif, ubah menjadi positif dan beri tanda negatif di hasilnya
    if x < 0:
        return -perkalian(-x, y)

    # Jika y negatif, ubah menjadi positif dan beri tanda negatif di hasilnya
    if y < 0:
        return -perkalian(x, -y)

    # Melakukan perkalian dengan menggunakan penjumlahan
    hasil = 0
    for _ in range(x):
        hasil += y

    return hasil

# Contoh penggunaan
bil1 = 6
bil2 = 5

# Menampilkan perhitungan yang sesuai dengan contoh
print(f"{bil1} x {bil2} = {' + '.join([str(bil2)] * bil1)} = {perkalian(bil1, bil2)}")

bil3 = 7
bil4 = 10

print(f"{bil3} x {bil4} = {' + '.join([str(bil4)] * bil3)} = {perkalian(bil3, bil4)}") 


#soal 2
def ganjil(bawah, atas):
    # Menentukan urutan berdasarkan nilai bawah dan atas
    if bawah < atas:
        # Jika bawah < atas, tampilkan dari bawah ke atas
        hasil = [i for i in range(bawah, atas + 1) if i % 2 != 0]
    else:
        # Jika bawah > atas, tampilkan dari atas ke bawah
        hasil = [i for i in range(atas, bawah + 1) if i % 2 != 0][::-1]

    return hasil

bawah = int(input("Masukkan batas bawah: "))
atas = int(input("Masukkan batas atas: "))

# Menghitung dan menampilkan deret bilangan ganjil
deret_ganjil = ganjil(bawah, atas)
print(f"Hasil deret bilangan ganjil dari {bawah} hingga {atas} adalah: {', '.join(map(str, deret_ganjil))}")

#soal 3
def hitung_ips(jumlah_mata_kuliah, nilai_mata_kuliah):
    total_nilai = 0
    total_sks = 0

    for nilai in nilai_mata_kuliah:
        if nilai == 'A':
            bobot = 4
        elif nilai == 'B':
            bobot = 3
        elif nilai == 'C':
            bobot = 2
        elif nilai == 'D':
            bobot = 1
        else:
            print(f"Nilai '{nilai}' tidak valid. Mengabaikan mata kuliah ini.")
            continue 

        # Setiap mata kuliah memiliki 3 SKS
        total_nilai += bobot * 3
        total_sks += 3

    # Menghitung IPS
    if total_sks == 0:
        return 0  
    ips = total_nilai / total_sks
    return ips

jumlah_mata_kuliah = int(input("Masukkan jumlah mata kuliah: "))
nilai_mata_kuliah = []

for i in range(jumlah_mata_kuliah):
    nilai = input(f"Masukkan nilai untuk mata kuliah ke-{i + 1} (A/B/C/D): ").upper()
    nilai_mata_kuliah.append(nilai)
    
# Menghitung IPS
ips = hitung_ips(jumlah_mata_kuliah, nilai_mata_kuliah)

# Menampilkan hasil
print(f"Indeks Prestasi Semester (IPS) Anda adalah: {ips:.2f}")

====================================================================================================
X adalah seorang perantau yang ingin tinggal di Kota A dengan budget terbatas. Untuk bertahan di sana, X harus membayar biaya penginapan per malam. Namun, harga penginapan dan aturan menginap di Kota A cukup kompleks, sehingga X memutuskan untuk membuat simulasi agar bisa mengetahui berapa lama ia dapat bertahan sebelum kehabisan uang.

Aturan Simulasi
Harga awal penginapan sudah ditentukan sebelum perjalanan dimulai.
Setiap malam, harga penginapan mendapat diskon 5% dari malam sebelumnya.
Setiap 3 malam, harga penginapan reset ke harga awal.
Jika saldo tidak cukup untuk membayar penginapan malam berikutnya, X dapat bekerja:
Setiap jam kerja, X mendapatkan uang sebanyak 3.
X dapat bekerja maksimal 3 jam dalam satu malam.
Jika setelah bekerja saldo masih tidak cukup, X harus pulang.
Jika X bekerja selama 2 hari berturut-turut, ia akan kelelahan dan harus pulang.
Program harus mencetak progres tiap malam, termasuk:
Saldo sebelum membayar.
Harga penginapan malam itu.
Proses kerja jika saldo tidak cukup.
Sisa saldo setelah membayar.
Parameter Fungsi
Fungsi ini memiliki dua parameter:

saldo (Integer) → jumlah uang yang dimiliki X saat memulai perjalanan.
biaya_per_malam_awal (Integer) → harga penginapan per malam sebelum diskon berlaku.
Aturan Output
Program akan menampilkan progres setiap malam dengan format berikut:

Malam ke-N:
Saldo sebelum bayar
Harga penginapan malam itu
Jika saldo kurang:
Jumlah jam kerja yang dilakukan
Saldo setelah bekerja
Jika setelah bekerja saldo masih kurang, X harus pulang
Jika X bekerja selama 2 hari berturut-turut, ia harus pulang
Jika berhasil menginap, sisa saldo setelah membayar
